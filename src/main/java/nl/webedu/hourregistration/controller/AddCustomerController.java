package nl.webedu.hourregistration.controller;

import com.jfoenix.controls.JFXTextField;
import javafx.fxml.FXML;
import nl.webedu.hourregistration.dao.ICustomerDAO;
import nl.webedu.hourregistration.dao.IProjectDAO;
import nl.webedu.hourregistration.database.DatabaseManager;
import nl.webedu.hourregistration.model.CustomerModel;
import nl.webedu.hourregistration.model.ProjectModel;

import java.io.IOException;


public class AddCustomerController {

    @FXML
    JFXTextField CustomerNameText;

    private ICustomerDAO customerDAO;
    private IProjectDAO projectDAO;

    private CustomerModel customer;

    private CustomerListController controller;

    /**
     * de customer en project dao wordt geladen als de view wordt geladen.
     * @throws IOException
     */
    public void initialize() throws IOException {
        customerDAO = DatabaseManager.getInstance().getDaoFactory().getCustomerDAO();
        projectDAO = DatabaseManager.getInstance().getDaoFactory().getProjectDAO();
    }

    /**
     * deze methode haalt de ingevulde tekst (mits deze er is) uit het textfield en maakt hiermee een klantobject aan
     * die wordt geinsert in de database. Het autogenerated id dat deze klant krijgt wordt meteen hieruit opgeslagen.
     * het klant object dat geinsert is wordt als customer opgeslagen aan de hand van het id.
     * er wordt een projectmodel aangemaakt en daaraan wordt de customer verbonden.
     * het projectmodel wordt geinsert in de database en de customer krijgt het projectmodel aan hem verbonden.
     * het customermodel wordt nu aan de listview toegevoegd.
     */
    public void newCustomer(){
        if (!CustomerNameText.getText().equals("")) {
            int id = customerDAO.insertCustomer(new CustomerModel(CustomerNameText.getText()));
            customer = customerDAO.findCustomer(String.valueOf(id));
            ProjectModel newProjectModel = new ProjectModel("-", null, null, null);
            newProjectModel.setCustomer(customer);
            projectDAO.insertProject(newProjectModel);
            customer.setProjectModel(projectDAO.selectProjectByCustomer(customer));
            controller.addCustomerToList(customer);
        }
    }

    /**
     * het customermodel dat hier wordt aangemaakt moet kunnen worden verkregen in een andere klasse
     * @return
     */
    public CustomerModel getCustomer(){
        return customer;
    }

    /**
     * deze methode is er om vanuit een andere klasse het tekstveld waar de klantnaam moet worden ingevuld op
     * leeg te kunnen zetten.
     */
    public void emptyNewCustomerText (){
        CustomerNameText.setText("");
    }

    /**
     * setter voor customerlistcontroller
     * @param controller
     */
    public void setCustomerListController(CustomerListController controller) {
        this.controller = controller;
    }
}

